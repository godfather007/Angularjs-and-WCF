<?xml version="1.0"?>
<configuration>
  <appSettings />
  <connectionStrings>
    <add name="MatrimonyEntities" connectionString="metadata=res://*/MatrimonyModel.csdl|res://*/MatrimonyModel.ssdl|res://*/MatrimonyModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=ABHAY-PC\ABHAY;initial catalog=Matrimony;user id=sa;password=abhay;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </assemblies>
    </compilation>
    <!--
        The <authentication> section enables configuration 
        of the security authentication mode used by 
        ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms" />
    <!--
        The <customErrors> section enables configuration 
        of what to do if/when an unhandled error occurs 
        during the execution of a request. Specifically, 
        it enables developers to configure html error pages 
        to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
         <error statusCode="403" redirect="NoAccess.htm" />
         <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
  </system.web>
  <!-- 
      The system.webServer section is required for running ASP.NET AJAX under Internet
      Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <system.serviceModel>
    <services>
      <service name="MatrimonyServices.Account" behaviorConfiguration="ServiceBehaviorHttp">
        <endpoint binding="webHttpBinding" contract="MatrimonyServices.IAccount" bindingConfiguration="BasicAuthentication" behaviorConfiguration="webHttpBehavior" />
      </service>
      <service name="MatrimonyServices.User" behaviorConfiguration="ServiceRequiresTokenBehaviorHttp">
        <endpoint binding="webHttpBinding" contract="MatrimonyServices.IUser" bindingConfiguration="BasicAuthentication" behaviorConfiguration="webHttpBehavior" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehaviorHttp">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        <behavior name="ServiceRequiresTokenBehaviorHttp">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <TokenValidationBehaviorExtension />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="webHttpBehavior">
          <webHttp helpEnabled="true" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="TokenValidationBehaviorExtension"
          type="MatrimonyServices.Behaviors.TokenValidationBehaviorExtension, MatrimonyServices, Version=1.0.0.0, Culture=neutral"/>
      </behaviorExtensions>
    </extensions>
    <!-- binding for .NET 4.0 crossDomainScriptAccessEnabled -->
    <bindings>
      <webHttpBinding>
        <binding name="crossDomain" crossDomainScriptAccessEnabled="true" />
        <binding name="BasicAuthentication" crossDomainScriptAccessEnabled="true">
          <!--<security mode="TransportCredentialOnly">
            <transport clientCredentialType="Basic" />
          </security>-->
        </binding>
      </webHttpBinding>
    </bindings>
    <!-- this have no affect for crossDomainScriptAccessEnabled (jsonp) because custom endpoints use binding instead -->
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="" helpEnabled="true" crossDomainScriptAccessEnabled="true" />
      </webHttpEndpoint>
    </standardEndpoints>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
</configuration>